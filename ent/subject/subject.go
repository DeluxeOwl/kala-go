// Code generated by entc, DO NOT EDIT.

package subject

const (
	// Label holds the string label denoting the subject type in the database.
	Label = "subject"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeType holds the string denoting the type edge name in mutations.
	EdgeType = "type"
	// Table holds the table name of the subject in the database.
	Table = "subjects"
	// TypeTable is the table that holds the type relation/edge.
	TypeTable = "subjects"
	// TypeInverseTable is the table name for the TypeConfig entity.
	// It exists in this package in order to avoid circular dependency with the "typeconfig" package.
	TypeInverseTable = "type_configs"
	// TypeColumn is the table column denoting the type relation/edge.
	TypeColumn = "type_config_subjects"
)

// Columns holds all SQL columns for subject fields.
var Columns = []string{
	FieldID,
	FieldName,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "subjects"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"type_config_subjects",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
