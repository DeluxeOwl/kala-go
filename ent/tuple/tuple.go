// Code generated by entc, DO NOT EDIT.

package tuple

const (
	// Label holds the string label denoting the tuple type in the database.
	Label = "tuple"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSubjectID holds the string denoting the subject_id field in the database.
	FieldSubjectID = "subject_id"
	// FieldRelationID holds the string denoting the relation_id field in the database.
	FieldRelationID = "relation_id"
	// FieldResourceID holds the string denoting the resource_id field in the database.
	FieldResourceID = "resource_id"
	// EdgeSubject holds the string denoting the subject edge name in mutations.
	EdgeSubject = "subject"
	// EdgeRelation holds the string denoting the relation edge name in mutations.
	EdgeRelation = "relation"
	// EdgeResource holds the string denoting the resource edge name in mutations.
	EdgeResource = "resource"
	// Table holds the table name of the tuple in the database.
	Table = "tuples"
	// SubjectTable is the table that holds the subject relation/edge.
	SubjectTable = "tuples"
	// SubjectInverseTable is the table name for the Subject entity.
	// It exists in this package in order to avoid circular dependency with the "subject" package.
	SubjectInverseTable = "subjects"
	// SubjectColumn is the table column denoting the subject relation/edge.
	SubjectColumn = "subject_id"
	// RelationTable is the table that holds the relation relation/edge.
	RelationTable = "tuples"
	// RelationInverseTable is the table name for the Relation entity.
	// It exists in this package in order to avoid circular dependency with the "relation" package.
	RelationInverseTable = "relations"
	// RelationColumn is the table column denoting the relation relation/edge.
	RelationColumn = "relation_id"
	// ResourceTable is the table that holds the resource relation/edge.
	ResourceTable = "tuples"
	// ResourceInverseTable is the table name for the Subject entity.
	// It exists in this package in order to avoid circular dependency with the "subject" package.
	ResourceInverseTable = "subjects"
	// ResourceColumn is the table column denoting the resource relation/edge.
	ResourceColumn = "resource_id"
)

// Columns holds all SQL columns for tuple fields.
var Columns = []string{
	FieldID,
	FieldSubjectID,
	FieldRelationID,
	FieldResourceID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
